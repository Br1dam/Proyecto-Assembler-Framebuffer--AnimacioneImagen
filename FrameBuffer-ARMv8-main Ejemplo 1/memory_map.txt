
Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD funciones.o
LOAD start.o
LOAD app.o
                0x0000000000080000                . = 0x80000

.text           0x0000000000080000    0xa1658
 *(.text.boot)
 .text.boot     0x0000000000080000    0x200d0 start.o
                0x0000000000080000                _start
                0x00000000000a0024                uart_putc
                0x00000000000a0060                uart_puts
 *(.text*)
 .text          0x00000000000a00d0      0x508 funciones.o
 .text          0x00000000000a05d8    0x80000 start.o
 .text          0x00000000001205d8     0x1080 app.o
                0x0000000000120ae0                main

.iplt           0x0000000000121658        0x0
 .iplt          0x0000000000121658        0x0 start.o

.rela.dyn       0x0000000000121658        0x0
 .rela.iplt     0x0000000000121658        0x0 start.o
 .rela.text.boot
                0x0000000000121658        0x0 start.o

.data           0x0000000000121658        0x0
 .data          0x0000000000121658        0x0 funciones.o
 .data          0x0000000000121658        0x0 start.o
 .data          0x0000000000121658        0x0 app.o

.igot.plt       0x0000000000121658        0x0
 .igot.plt      0x0000000000121658        0x0 start.o

.bss            0x0000000000121658        0x8
 *(.bss*)
 .bss           0x0000000000121658        0x0 funciones.o
 .bss           0x0000000000121658        0x0 start.o
 .bss           0x0000000000121658        0x0 app.o
                0x0000000000121660                . = ALIGN (0x10)
 *fill*         0x0000000000121658        0x8 
                0x0000000000121660                __bss_start = .
 *(.bss .bss.*)
 *(COMMON)
                0x0000000000121660                __bss_end = .
                0x0000000000121660                _end = .
                0x0000000000000000                __bss_size = ((__bss_end - __bss_start) >> 0x3)
OUTPUT(kernel8.elf elf64-littleaarch64)
LOAD linker stubs

.debug_line     0x0000000000000000      0x6b6
 .debug_line    0x0000000000000000      0x18e funciones.o
 .debug_line    0x000000000000018e       0xae start.o
 .debug_line    0x000000000000023c      0x47a app.o

.debug_info     0x0000000000000000       0x8a
 .debug_info    0x0000000000000000       0x2e funciones.o
 .debug_info    0x000000000000002e       0x2e start.o
 .debug_info    0x000000000000005c       0x2e app.o

.debug_abbrev   0x0000000000000000       0x3c
 .debug_abbrev  0x0000000000000000       0x14 funciones.o
 .debug_abbrev  0x0000000000000014       0x14 start.o
 .debug_abbrev  0x0000000000000028       0x14 app.o

.debug_aranges  0x0000000000000000       0x90
 .debug_aranges
                0x0000000000000000       0x30 funciones.o
 .debug_aranges
                0x0000000000000030       0x30 start.o
 .debug_aranges
                0x0000000000000060       0x30 app.o

.debug_str      0x0000000000000000       0x56
 .debug_str     0x0000000000000000       0x4e funciones.o
 .debug_str     0x000000000000004e        0x8 start.o
                                         0x4a (size before relaxing)
 .debug_str     0x0000000000000056       0x4e app.o
