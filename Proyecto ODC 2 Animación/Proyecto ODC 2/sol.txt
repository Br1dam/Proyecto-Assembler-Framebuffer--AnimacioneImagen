 /*Esto va en app.s*/
 // sol
 movz x10, 0xEF, lsl 16   // Color sol: Amarillo
 movk x10, 0xFF00, lsl 00
 mov x1, 110			   //x1 = centro.fila
 mov x2, 500   			   // x2 = centro.columna
 mov x3, 100 			   // x3 = radio		
 BL Pixeldir			

 BL dibujarCirculo	

/*Esto va en funs.s*/
dibujarCirculo:
/*
	parametros:
				centro = (x3, x4);  x3 es la columna, x3 la fila
				radio = x1
				w10 = color
						
	coomportamiento:
				x0 empieza en esquina superior izquierdo del cuadrado que contiene el circulo
				y va recorriendo el cuadrado y si se cumple que x0 esta dentro del circulo dado por
					(x0.fila - x4)**2 + (x0.columna - x3)**2 <= x3**2
						\------x9-----/     \------x11-----/   \--x12--/
						\-------------x13-------------/							 
				se pinta el pixel

*/
		mov x7, SCREEN_WIDTH
		mov x9, #2
		mul x14, x1, x9					// x14 =  diametro
		mov x5, x14						// con x5 me fijo si llego a final de cuadrado
		mov x6, x14						// con x6 me fijo si llega a la ultima fila
		mov x9, #4
		mul x8, x14, x9					// x8 es 4*diametro
		BL Pixeldir						// x0 en el centro
		
		sub x0, x0, x7		// x0 en pared Izquierda
		mul x7, x7, x1
		sub x0, x0, x7		// x0 en esquina superior izquierda

cirloop:
		mov x7, SCREEN_WIDTH

		udiv x9, x0, x7
		sub x9, x9, x1			   
		mul x9, x9, x9				// x9 = (x0.fila - x1)**2 	

		udiv x11, x0, x7  
		msub x11, x11, x7, x0 
		add x11, x11, x2			   
		mul x11, x11, x11			// x11 = (x0.columna + x2)**2

		add x13, x9, x11			// x13 = (x0.fila - x1)**2 + (x0.columna - x2)**2

		mov x12, x1
		mul x12, x12, x12			// x12 = radio**2

		cmp x12, x13
		B.GE color					//si x13 <= x12 
		B skip
color:								// then pintar pixel
		stur w10,[x0]	
skip:
		add x0, x0, #4				// avanza pixel
		sub x5, x5, #1				// resto contador 

		B.NE next_fila
		B skip2
next_fila:
		mov x7, x8
		sub x0, x0, x7
		add x0,x0, SCREEN_WIDTH
		sub x6, x6, #1
skip2:
		cmp x6, x14         			//if x6 >= diametro, repetir proceso
		B.GE cirloop
		
ret



